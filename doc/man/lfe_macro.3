.\" Automatically generated by Pandoc 1.19.2.1
.\"
.TH "lfe_macro" "3" "2008\-2016" "" ""
.hy
.SH NAME
.PP
lfe_macro \- Lisp Flavoured Erlang (LFE) macro expander
.SH SYNOPSIS
.PP
This module provides an interface to the LFE macro expander.
The expander is used by the LFE compile and in the shell but can also be
used by applications explicitly wanting to handle a file.
.SH DATA TYPES
.PP
\f[B]sexpr()\f[]
.PP
An LFE s\-expression, a list structure.
.PP
\f[B]filesexpr() = {Sexpr,Line}\f[]
.PP
This is the format returned by \f[C]lfe_io:parse_file/1\f[] and is used
by the compiler to give better error information.
.PP
\f[B]env()\f[]
.PP
This is an macro and evaluation environment as created by
\f[C]lfe_lib:new_env()\f[].
.SH EXPORTS
.PP
\f[B]expand_forms([FileSexpr], Env) \-> ExpRet\f[]
.PP
where
.IP
.nf
\f[C]
\ \ FileSexpr\ =\ filesexpr()
\ \ Env\ =\ env()
\ \ ExpRet\ =\ {yes,[FileSexpr],Env,Warnings}\ |\ {error,Errors,Warnings}
\f[]
.fi
.PP
\f[B]macro_forms([FileSexpr], Env) \-> {[FileSexpr],Env}.\f[]
.PP
where
.IP
.nf
\f[C]
FileSexpr\ =\ filesexpr()
Env\ =\ env()
\f[]
.fi
.PP
\f[B]expand_expr_all(Sexpr, Env) \-> Sexpr.\f[]
.PP
where
.IP
.nf
\f[C]
Sexpr\ =\ sexpr()
Env\ =\ env()
\f[]
.fi
.PP
Expand all macros in Sexpr either using the definitions in Env or just
the default macros.
Note that any eventual new macro definitions will be lost.
.PP
\f[B]expand_expr(Sexpr, Env) \-> {yes,Exp} | no.\f[]
.PP
\f[B]expand_expr_1(Sexpr, Env) \-> {yes,Exp} | no.\f[]
.PP
where
.IP
.nf
\f[C]
Sexpr\ =\ Exp\ =\ sexpr()
Env\ =\ env()
\f[]
.fi
.PP
Test if the top s\-expression here is a macro call, if so expand it and
return {yes,Expansion}, if not then return no.
\f[C]expand_expr/2\f[] will expand the top s\-expression as much as
possible while \f[C]expand_expr_1/2\f[] will only try it once.
These functions use the macro definitions in the environment and the
standard pre\-defined macros.
.SH SEE ALSO
.PP
\f[B]lfe_comp(3)\f[], \f[B]lfe_gen(3)\f[]
.SH AUTHORS
Robert Virding.
